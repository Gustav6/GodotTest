[gd_scene load_steps=6 format=3 uid="uid://dcd1snehekdx2"]

[ext_resource type="Texture2D" uid="uid://chgrd866p263t" path="res://Asset Packs 1-3 (final)/Asset Pack-V1/Tilemap/Basic Tilemap.png" id="2_a300c"]
[ext_resource type="PackedScene" uid="uid://6m2e7iktg8mo" path="res://Prefabs/Character.tscn" id="2_n2k6o"]

[sub_resource type="CSharpScript" id="CSharpScript_5624h"]
script/source = "using Godot;
using System;

public partial class main : Node2D
{
    ColorRect rect;

    int moveSpeed = 200;

    // Called when the node enters the scene tree for the first time.
    public override void _Ready()
    {
        rect = new ColorRect()
        {
            Color = Colors.Blue,
            Position = new Vector2(100, 100),
            Size = new Vector2(100, 100)
        };

        AddChild(rect);
    }

    // Called every frame. 'delta' is the elapsed time since the previous frame.
    public override void _Process(double delta)
    {
        //var direction = Input.GetAxis(\"move_left\", \"move_right\");

        //if (direction != 0)
        //{
        //    rect.Position += new Vector2(direction * (float)delta * moveSpeed, 0);
        //}
    }
}
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_8rnel"]
texture = ExtResource("2_a300c")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
0:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
0:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
0:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
0:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)

[sub_resource type="TileSet" id="TileSet_cytn0"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_8rnel")

[node name="Main" type="Node2D"]
script = SubResource("CSharpScript_5624h")

[node name="Character" parent="." instance=ExtResource("2_n2k6o")]
position = Vector2(83, 587)

[node name="Camera2D" type="Camera2D" parent="Character"]

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_cytn0")
format = 2
layer_0/name = "Tilemap"
layer_0/z_index = -1
layer_0/tile_data = PackedInt32Array(2228224, 0, 7, 2293760, 0, 8, 2359296, 0, 5, 2424832, 0, 6, 2490368, 0, 7, 2555904, 0, 8, 2621440, 0, 9, 2621441, 65536, 9, 2621442, 131072, 9, 2621443, 196608, 9, 2621444, 262144, 9, 2621445, 65536, 9, 2621446, 131072, 9, 2621447, 196608, 9, 2621448, 262144, 9, 2621449, 65536, 9, 2621450, 131072, 9, 2621451, 196608, 9, 2621452, 262144, 9, 2621453, 65536, 9, 2621454, 131072, 9, 2621455, 196608, 9, 2621456, 262144, 9, 2621457, 65536, 9, 2621458, 131072, 9, 2621459, 196608, 9, 2621460, 262144, 9, 2621461, 65536, 9, 2621462, 131072, 9, 2621463, 196608, 9, 2621464, 262144, 9, 2621465, 65536, 9, 2621466, 131072, 9, 2621467, 196608, 9, 2621468, 262144, 9, 2621469, 65536, 9, 2621470, 131072, 9, 2621471, 196608, 9, 2621472, 262144, 9, 2621473, 65536, 9, 2621474, 131072, 1, 2555905, 65536, 8, 2555906, 131072, 8, 2555907, 131072, 8, 2555908, 196608, 8, 2555909, 131072, 8, 2555910, 196608, 8, 2555911, 131072, 8, 2555912, 196608, 8, 2555913, 131072, 8, 2555914, 196608, 8, 2555915, 131072, 8, 2555916, 196608, 8, 2555917, 131072, 8, 2555918, 196608, 8, 2555919, 131072, 8, 2555920, 196608, 8, 2555921, 131072, 8, 2555922, 196608, 8, 2555923, 131072, 8, 2555924, 196608, 8, 2555925, 131072, 8, 2555926, 196608, 8, 2555927, 131072, 8, 2555928, 196608, 8, 2555929, 131072, 8, 2555930, 196608, 8, 2555931, 131072, 8, 2555932, 196608, 8, 2555933, 131072, 8, 2555934, 196608, 8, 2555935, 131072, 8, 2555936, 196608, 8, 2424833, 65536, 6, 2490369, 65536, 7, 2293761, 65536, 6, 2359297, 65536, 7, 2162689, 65536, 6, 2228225, 65536, 7, 2162688, 0, 6, 2555937, 131072, 8, 2555938, 131072, 8, 2687010, 0, 5, 3014690, 0, 9, 3014691, 65536, 9, 2949154, 0, 8, 3014692, 131072, 9, 3014693, 196608, 9, 3014694, 262144, 9, 3014695, 65536, 9, 3014696, 131072, 9, 3014697, 65536, 9, 3014698, 131072, 9, 3014699, 196608, 9, 3014700, 262144, 9, 2883618, 0, 7, 2818082, 0, 6, 2752546, 0, 5, 2424834, 131072, 6, 2490370, 131072, 7, 2424835, 196608, 6, 2490371, 196608, 7, 2424836, 131072, 6, 2490372, 131072, 7, 2424837, 196608, 6, 2490373, 196608, 7, 2424838, 131072, 6, 2490374, 131072, 7, 2424839, 131072, 6, 2490375, 131072, 7, 2293762, 131072, 6, 2359298, 131072, 7, 2293763, 196608, 6, 2359299, 196608, 7, 2293764, 131072, 6, 2359300, 131072, 7, 2293765, 196608, 6, 2359301, 196608, 7, 2293766, 131072, 6, 2359302, 131072, 7, 2293767, 196608, 6, 2359303, 196608, 7, 2162690, 131072, 6, 2228226, 131072, 7, 2162691, 196608, 6, 2228227, 196608, 7, 2162692, 131072, 6, 2228228, 131072, 7, 2162693, 196608, 6, 2228229, 196608, 7, 2162694, 131072, 6, 2228230, 131072, 7, 2162695, 196608, 6, 2228231, 196608, 7, 2424841, 196608, 6, 2490377, 196608, 7, 2424842, 131072, 6, 2490378, 131072, 7, 2424840, 131072, 6, 2490376, 131072, 7, 2424843, 196608, 6, 2490379, 196608, 7, 2424844, 131072, 6, 2490380, 131072, 7, 2424845, 196608, 6, 2490381, 196608, 7, 2424846, 131072, 6, 2490382, 131072, 7, 2424847, 196608, 6, 2490383, 196608, 7, 2424848, 131072, 6, 2490384, 131072, 7, 2424849, 196608, 6, 2490385, 196608, 7, 2424850, 131072, 6, 2490386, 131072, 7, 2424851, 196608, 6, 2490387, 196608, 7, 2424852, 131072, 6, 2490388, 131072, 7, 2424853, 196608, 6, 2490389, 196608, 7, 2424854, 131072, 6, 2490390, 131072, 7, 2424855, 196608, 6, 2490391, 196608, 7, 2424856, 131072, 6, 2490392, 131072, 7, 2424857, 196608, 6, 2490393, 196608, 7, 2424858, 131072, 6, 2490394, 131072, 7, 2424859, 196608, 6, 2490395, 196608, 7, 2424860, 131072, 6, 2490396, 131072, 7, 2424861, 196608, 6, 2490397, 196608, 7, 2424862, 131072, 6, 2490398, 131072, 7, 2424863, 196608, 6, 2490399, 196608, 7, 2424864, 131072, 6, 2490400, 131072, 7, 2424865, 196608, 6, 2490401, 196608, 7, 2424866, 131072, 6, 2490402, 131072, 7, 2424867, 196608, 6, 2490403, 196608, 7, 2293794, 131072, 6, 2359330, 131072, 7, 2293795, 196608, 6, 2359331, 196608, 7, 2293792, 131072, 6, 2359328, 131072, 7, 2293793, 196608, 6, 2359329, 196608, 7, 2293790, 131072, 6, 2359326, 131072, 7, 2293791, 196608, 6, 2359327, 196608, 7, 2293788, 131072, 6, 2359324, 131072, 7, 2293789, 196608, 6, 2359325, 196608, 7, 2293786, 131072, 6, 2359322, 131072, 7, 2293787, 196608, 6, 2359323, 196608, 7, 2293784, 131072, 6, 2359320, 131072, 7, 2293785, 196608, 6, 2359321, 196608, 7, 2293782, 131072, 6, 2359318, 131072, 7, 2293783, 196608, 6, 2359319, 196608, 7, 2293780, 131072, 6, 2359316, 131072, 7, 2293781, 196608, 6, 2359317, 196608, 7, 2293778, 131072, 6, 2359314, 131072, 7, 2293779, 196608, 6, 2359315, 196608, 7, 2293776, 131072, 6, 2359312, 131072, 7, 2293777, 196608, 6, 2359313, 196608, 7, 2293774, 131072, 6, 2359310, 131072, 7, 2293775, 196608, 6, 2359311, 196608, 7, 2293772, 131072, 6, 2359308, 131072, 7, 2293773, 196608, 6, 2359309, 196608, 7, 2293770, 131072, 6, 2359306, 131072, 7, 2293771, 196608, 6, 2359307, 196608, 7, 2293768, 131072, 6, 2359304, 131072, 7, 2293769, 196608, 6, 2359305, 196608, 7, 2162696, 131072, 6, 2228232, 131072, 7, 2162697, 196608, 6, 2228233, 196608, 7, 2162698, 131072, 6, 2228234, 131072, 7, 2162699, 196608, 6, 2228235, 196608, 7, 2162700, 131072, 6, 2228236, 131072, 7, 2162701, 196608, 6, 2228237, 196608, 7, 2162702, 131072, 6, 2228238, 131072, 7, 2162703, 196608, 6, 2228239, 196608, 7, 2162704, 131072, 6, 2228240, 131072, 7, 2162705, 196608, 6, 2228241, 196608, 7, 2162706, 131072, 6, 2228242, 131072, 7, 2162707, 196608, 6, 2228243, 196608, 7, 2162708, 131072, 6, 2228244, 131072, 7, 2162709, 196608, 6, 2228245, 196608, 7, 2162710, 131072, 6, 2228246, 131072, 7, 2162711, 196608, 6, 2228247, 196608, 7, 2162712, 131072, 6, 2228248, 131072, 7, 2162713, 196608, 6, 2228249, 196608, 7, 2162714, 131072, 6, 2228250, 131072, 7, 2162715, 196608, 6, 2228251, 196608, 7, 2162716, 131072, 6, 2228252, 131072, 7, 2162717, 196608, 6, 2228253, 196608, 7, 2162718, 131072, 6, 2228254, 131072, 7, 2162719, 196608, 6, 2228255, 196608, 7, 2162720, 131072, 6, 2228256, 131072, 7, 2162721, 196608, 6, 2228257, 196608, 7, 2162722, 131072, 6, 2228258, 131072, 7, 2162723, 196608, 6, 2228259, 196608, 7, 2818084, 131072, 6, 2883620, 131072, 7, 2818085, 196608, 6, 2883621, 196608, 7, 2818086, 131072, 6, 2883622, 131072, 7, 2818087, 196608, 6, 2883623, 196608, 7, 2818088, 131072, 6, 2883624, 131072, 7, 2818089, 196608, 6, 2883625, 196608, 7, 2818090, 131072, 6, 2883626, 131072, 7, 2818091, 131072, 6, 2883627, 131072, 7, 2818092, 196608, 6, 2883628, 196608, 7, 2687012, 131072, 6, 2752548, 131072, 7, 2687013, 196608, 6, 2752549, 196608, 7, 2687014, 131072, 6, 2752550, 131072, 7, 2687015, 196608, 6, 2752551, 196608, 7, 2687016, 131072, 6, 2752552, 131072, 7, 2687017, 196608, 6, 2752553, 196608, 7, 2687018, 131072, 6, 2752554, 131072, 7, 2687019, 131072, 6, 2752555, 131072, 7, 2555940, 131072, 6, 2621476, 131072, 7, 2555941, 196608, 6, 2621477, 196608, 7, 2555942, 131072, 6, 2621478, 131072, 7, 2555943, 196608, 6, 2621479, 196608, 7, 2555944, 131072, 6, 2621480, 131072, 7, 2555945, 196608, 6, 2621481, 196608, 7, 2555946, 131072, 6, 2621482, 131072, 7, 2555947, 131072, 6, 2621483, 131072, 7, 2424868, 131072, 6, 2490404, 131072, 7, 2424869, 196608, 6, 2490405, 196608, 7, 2424870, 131072, 6, 2490406, 131072, 7, 2424871, 196608, 6, 2490407, 196608, 7, 2424872, 131072, 6, 2490408, 131072, 7, 2424873, 196608, 6, 2490409, 196608, 7, 2424874, 131072, 6, 2490410, 131072, 7, 2424875, 131072, 6, 2490411, 131072, 7, 2293796, 131072, 6, 2359332, 131072, 7, 2293797, 196608, 6, 2359333, 196608, 7, 2293798, 131072, 6, 2359334, 131072, 7, 2293799, 196608, 6, 2359335, 196608, 7, 2293800, 131072, 6, 2359336, 131072, 7, 2293801, 196608, 6, 2359337, 196608, 7, 2293802, 131072, 6, 2359338, 131072, 7, 2293803, 131072, 6, 2359339, 131072, 7, 2162724, 131072, 6, 2228260, 131072, 7, 2162725, 196608, 6, 2228261, 196608, 7, 2162726, 131072, 6, 2228262, 131072, 7, 2162727, 196608, 6, 2228263, 196608, 7, 2162728, 131072, 6, 2228264, 131072, 7, 2162729, 196608, 6, 2228265, 196608, 7, 2162730, 131072, 6, 2228266, 131072, 7, 2162731, 131072, 6, 2228267, 131072, 7, 2162732, 196608, 6, 2228268, 196608, 7, 2293804, 196608, 6, 2359340, 196608, 7, 2424876, 196608, 6, 2490412, 196608, 7, 2555948, 196608, 6, 2621484, 196608, 7, 2687020, 196608, 6, 2752556, 196608, 7, 2097153, 65536, 5, 2097154, 131072, 5, 2097155, 196608, 5, 2097156, 131072, 5, 2097157, 196608, 5, 2097158, 131072, 5, 2097159, 196608, 5, 2097160, 131072, 5, 2097161, 196608, 5, 2097162, 131072, 5, 2097163, 196608, 5, 2097164, 131072, 5, 2097165, 196608, 5, 2097166, 131072, 5, 2097167, 196608, 5, 2097168, 131072, 5, 2097169, 196608, 5, 2097170, 131072, 5, 2097171, 196608, 5, 2097172, 131072, 5, 2097173, 196608, 5, 2097174, 131072, 5, 2097175, 196608, 5, 2097176, 131072, 5, 2097177, 196608, 5, 2097178, 131072, 5, 2097179, 196608, 5, 2097180, 131072, 5, 2097181, 196608, 5, 2097182, 131072, 5, 2097183, 196608, 5, 2097184, 131072, 5, 2097185, 196608, 5, 2097186, 131072, 5, 2097187, 196608, 5, 2097188, 131072, 5, 2097189, 196608, 5, 2097190, 131072, 5, 2097191, 196608, 5, 2097192, 131072, 5, 2097193, 196608, 5, 2097194, 131072, 5, 2097195, 131072, 5, 2097196, 196608, 5, 2097152, 0, 5, 2031617, 65536, 4, 2031618, 131072, 4, 2031619, 196608, 4, 2031620, 262144, 4, 2031621, 65536, 4, 2031622, 131072, 4, 2031623, 196608, 4, 2031624, 262144, 4, 2031625, 65536, 4, 2031626, 131072, 4, 2031627, 196608, 4, 2031628, 262144, 4, 2031629, 65536, 4, 2031630, 131072, 4, 2031631, 196608, 4, 2031632, 262144, 4, 2031633, 65536, 4, 2031634, 131072, 4, 2031635, 196608, 4, 2031636, 262144, 4, 2031637, 65536, 4, 2031638, 131072, 4, 2031639, 196608, 4, 2031640, 262144, 4, 2031657, 65536, 4, 2031658, 131072, 4, 2031659, 196608, 4, 2031660, 262144, 4, 2031653, 65536, 4, 2031654, 131072, 4, 2031655, 196608, 4, 2031656, 262144, 4, 2031649, 65536, 4, 2031650, 131072, 4, 2031651, 196608, 4, 2031652, 262144, 4, 2031645, 65536, 4, 2031646, 131072, 4, 2031647, 196608, 4, 2031648, 262144, 4, 2031641, 65536, 4, 2031642, 131072, 4, 2031643, 196608, 4, 2031644, 262144, 4, 2031616, 0, 4, 2949156, 131072, 8, 2949157, 196608, 8, 2949158, 131072, 8, 2949159, 196608, 8, 2949160, 131072, 8, 2949161, 131072, 8, 2949162, 196608, 8, 2949163, 196608, 8, 2949164, 196608, 8, 2555939, 196608, 0, 2621475, 196608, 1, 2687011, 196608, 1, 2752547, 196608, 2, 2818083, 196608, 1, 2883619, 196608, 2, 2949155, 65536, 8)
